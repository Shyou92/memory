{"version":3,"sources":["constants/types.js","utils/shuffle.js","constants/constants.js","redux/reducers/cardsArrayReducer.js","redux/reducers/flipReducers.js","redux/reducers/changeScoreReducer.js","redux/reducers/timerReducer.js","redux/reducers/standingsReducer.js","redux/reducers/startScreenReducer.js","redux/reducers/playerReducer.js","redux/reducers/positionReducer.js","redux/reducers/reducer.js","redux/store.js","redux/actionCreators.js","Components/StartScreen/StartScreen.jsx","Components/Timer/Timer.jsx","Components/Header/Header.jsx","Components/Card/Card.jsx","Components/CardList/CardList.jsx","Components/Playfield/Playfield.jsx","Components/Standings/Standings.jsx","Components/App/App.jsx","reportWebVitals.js","index.js"],"names":["FLIP_CARD_TO_OPENED","FLIP_CARD_TO_CLOSED","UPDATED_PLAYFIELD","INCREASE_SCORE_POINT","DECREASE_SCORE_POINT","TIMER_IS_ON","TIMER_IS_OFF","START_TIMER","TABLE_IS_OPENED","TABLE_IS_CLOSED","STARTSCREEN_IS_OPENED","STARTSCREEN_IS_CLOSED","ADD_PLAYER_NAME","INCREASE_PLAYER_NUMBER","shuffle","cardsArray","id","color","isVisible","array","i","length","j","Math","floor","random","initialState","cardsArrayReducer","state","action","type","filter","item","checkCardArray","flipReducer","map","card","payload","newCard","push","setTimeout","flippedToClosedInFewSeconds","newArrayState","store","dispatch","updatePlayfield","increaseScore","decreaseScore","score","changeScoreReducer","time","timerOn","setTimerReducer","isOpened","standingsReducer","isClosed","closeStartScreen","name","playerReducer","number","increasePlayerNumber","rootReducers","combineReducers","startScreenReducer","positionReducer","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","flippedToOpened","isVisibleState","cardId","flippedToClosed","scoreState","startTimer","timerState","stopTimer","counterTimer","currentTime","openTable","tableState","closeTable","startScreenState","addPlayerName","playerName","increasePlayerNumberPosition","playerNumber","mapDispatchToProps","connect","timer","className","onSubmit","e","preventDefault","target","firstChild","value","placeholder","onClick","useEffect","interval","setInterval","clearInterval","slice","cardsArrayFromState","style","background","Playfield","App","subscribe","render","console","log","getState","unsubscribe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08843bf4.chunk.js","sourcesContent":["export const FLIP_CARD_TO_OPENED = 'CARD/FLIP_CARD_TO_OPENED';\r\nexport const FLIP_CARD_TO_CLOSED = 'CARD/FLIP_CARD_TO_CLOSED';\r\nexport const FLIP_CARD_ADD_TO_CHECK = 'CARD/FLIP_CARD_ADD_TO_CHECK';\r\nexport const UPDATED_PLAYFIELD = 'CARD/UPDATED_PLAYFIELD';\r\nexport const INCREASE_SCORE_POINT = 'SCORE/INCREASE_SCORE_POINT';\r\nexport const DECREASE_SCORE_POINT = 'SCORE/DECREASE_SCORE_POINT';\r\nexport const TIMER_IS_ON = 'TIMER/TIMER_IS_ON';\r\nexport const TIMER_IS_OFF = 'TIMER/TIMER_IS_OFF';\r\nexport const START_TIMER = 'TIMER/START_TIMER';\r\nexport const TABLE_IS_OPENED = 'STANDINGS/TABLE_IS_OPENED';\r\nexport const TABLE_IS_CLOSED = 'STANDINGS/TABLE_IS_CLOSED';\r\nexport const STARTSCREEN_IS_OPENED = 'STARTSCREEN/STARTSCREEN_IS_OPENED';\r\nexport const STARTSCREEN_IS_CLOSED = 'STARTSCREEN/STARTSCREEN_IS_CLOSED';\r\nexport const ADD_PLAYER_NAME = 'PLAYER/ADD_PLAYER_NAME';\r\nexport const INCREASE_PLAYER_NUMBER = 'STANDINGS/INCREASE_PLAYER_NUMBER';\r\n","function shuffle(array) {\r\n  // using Fisher–Yates shuffle\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nexport default shuffle;\r\n","import shuffle from '../utils/shuffle';\r\n\r\nconst cardsArray = [\r\n  { id: 1, color: 'red', isVisible: false },\r\n  { id: 2, color: 'red', isVisible: false },\r\n  // { id: 3, color: 'green', isVisible: false },\r\n  // { id: 4, color: 'green', isVisible: false },\r\n  // { id: 5, color: 'blue', isVisible: false },\r\n  // { id: 6, color: 'blue', isVisible: false },\r\n  // { id: 7, color: 'coral', isVisible: false },\r\n  // { id: 8, color: 'coral', isVisible: false },\r\n  // { id: 9, color: 'purple', isVisible: false },\r\n  // { id: 10, color: 'purple', isVisible: false },\r\n  // { id: 11, color: 'yellow', isVisible: false },\r\n  // { id: 12, color: 'yellow', isVisible: false },\r\n  // { id: 13, color: 'brown', isVisible: false },\r\n  // { id: 14, color: 'brown', isVisible: false },\r\n  // { id: 15, color: 'aqua', isVisible: false },\r\n  // { id: 16, color: 'aqua', isVisible: false },\r\n  // { id: 17, color: 'pink', isVisible: false },\r\n  // { id: 18, color: 'pink', isVisible: false },\r\n  // { id: 19, color: 'grey', isVisible: false },\r\n  // { id: 20, color: 'grey', isVisible: false },\r\n  // { id: 21, color: 'silver', isVisible: false },\r\n  // { id: 22, color: 'silver', isVisible: false },\r\n  // { id: 23, color: 'lime', isVisible: false },\r\n  // { id: 24, color: 'lime', isVisible: false },\r\n  // { id: 25, color: 'fuchsia', isVisible: false },\r\n  // { id: 26, color: 'fuchsia', isVisible: false },\r\n  // { id: 27, color: 'orange', isVisible: false },\r\n  // { id: 28, color: 'orange', isVisible: false },\r\n  // { id: 29, color: 'violet', isVisible: false },\r\n  // { id: 30, color: 'violet', isVisible: false },\r\n  // { id: 31, color: 'beige', isVisible: false },\r\n  // { id: 32, color: 'beige', isVisible: false },\r\n  // { id: 33, color: 'indigo', isVisible: false },\r\n  // { id: 34, color: 'indigo', isVisible: false },\r\n  // { id: 35, color: 'turquoise', isVisible: false },\r\n  // { id: 36, color: 'turquoise', isVisible: false },\r\n];\r\n\r\nshuffle(cardsArray);\r\n\r\nexport default cardsArray;\r\n","import cardsArray from '../../constants/constants';\r\nimport { UPDATED_PLAYFIELD } from '../../constants/types';\r\n\r\nlet initialState = {\r\n  cardsArray,\r\n};\r\n\r\nfunction cardsArrayReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATED_PLAYFIELD: {\r\n      return {\r\n        ...state,\r\n        cardsArray: state.cardsArray.filter((item) => {\r\n          return item.isVisible !== true;\r\n        }),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default cardsArrayReducer;\r\n","import {\r\n  FLIP_CARD_TO_OPENED,\r\n  FLIP_CARD_TO_CLOSED,\r\n  UPDATED_PLAYFIELD,\r\n} from '../../constants/types';\r\nimport {\r\n  flippedToClosedInFewSeconds,\r\n  updatePlayfield,\r\n  increaseScore,\r\n  decreaseScore,\r\n} from '../actionCreators';\r\nimport cardsArray from '../../constants/constants';\r\nimport store from '../store';\r\n\r\nconst initialState = {\r\n  cardsArray,\r\n};\r\nconst checkCardArray = [];\r\n\r\nfunction flipReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FLIP_CARD_TO_OPENED:\r\n      return {\r\n        ...state,\r\n        cardsArray: state.cardsArray.map((card) => {\r\n          if (card.id === action.payload.id) {\r\n            const newCard = {\r\n              id: action.payload.id,\r\n              color: card.color,\r\n              isVisible: true,\r\n            };\r\n\r\n            if (card.id === newCard.id) {\r\n              card.isVisible = true;\r\n              checkCardArray.push(card);\r\n            }\r\n            setTimeout(\r\n              () => flippedToClosedInFewSeconds(false, newCard.id),\r\n              5000\r\n            );\r\n\r\n            if (checkCardArray.length === 2) {\r\n              if (checkCardArray[0].color === checkCardArray[1].color) {\r\n                const newArrayState = state.cardsArray.filter((item) => {\r\n                  if (item.isVisible !== true) {\r\n                    return item;\r\n                  }\r\n                });\r\n                store.dispatch(updatePlayfield(newArrayState));\r\n                state.cardsArray = newArrayState;\r\n                checkCardArray.length = 0;\r\n                store.dispatch(increaseScore(state));\r\n                return state.cardsArray;\r\n              } else {\r\n                setTimeout(\r\n                  () =>\r\n                    state.cardsArray.map((item) => {\r\n                      if (item.isVisible === true) {\r\n                        flippedToClosedInFewSeconds(false, item.id);\r\n                        item.isVisible = false;\r\n                      }\r\n                    }),\r\n                  2000\r\n                );\r\n                checkCardArray.length = 0;\r\n                store.dispatch(decreaseScore(state));\r\n              }\r\n            }\r\n          }\r\n          return card;\r\n        }),\r\n      };\r\n    case FLIP_CARD_TO_CLOSED:\r\n      return {\r\n        ...state,\r\n        cardsArray: state.cardsArray.map((card) => {\r\n          if (action.payload.isVisible === false) {\r\n            const newCard = {\r\n              id: action.payload.id,\r\n              color: card.color,\r\n              isVisible: false,\r\n            };\r\n            if (card.id === newCard.id) {\r\n              card.isVisible = false;\r\n              checkCardArray.length = 0;\r\n            }\r\n          }\r\n          return card;\r\n        }),\r\n      };\r\n    case UPDATED_PLAYFIELD:\r\n      const newArrayState = [];\r\n      return {\r\n        ...state,\r\n        cardsArray: state.cardsArray.filter((item) => {\r\n          if (item.isVisible === false) {\r\n            newArrayState.push(item);\r\n          }\r\n          state.cardsArray = newArrayState;\r\n          return cardsArray;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default flipReducer;\r\n","import {\r\n  INCREASE_SCORE_POINT,\r\n  DECREASE_SCORE_POINT,\r\n} from '../../constants/types';\r\n\r\nconst initialState = {\r\n  score: 0,\r\n};\r\n\r\nfunction changeScoreReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INCREASE_SCORE_POINT:\r\n      return {\r\n        ...state,\r\n        score: state.score + 10,\r\n      };\r\n    case DECREASE_SCORE_POINT:\r\n      return {\r\n        ...state,\r\n        score: state.score - 5,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default changeScoreReducer;\r\n","import { TIMER_IS_ON, START_TIMER, TIMER_IS_OFF } from '../../constants/types';\r\n\r\nconst initialState = {\r\n  time: 0,\r\n  timerOn: false,\r\n};\r\n\r\nfunction setTimerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TIMER_IS_ON:\r\n      return {\r\n        ...state,\r\n        timerOn: true,\r\n      };\r\n    case START_TIMER:\r\n      return {\r\n        ...state,\r\n        time: state.time + 1,\r\n      };\r\n    case TIMER_IS_OFF:\r\n      return {\r\n        ...state,\r\n        timerOn: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default setTimerReducer;\r\n","import { TABLE_IS_OPENED, TABLE_IS_CLOSED } from '../../constants/types';\r\n\r\nconst initialState = {\r\n  isOpened: false,\r\n};\r\n\r\nfunction standingsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TABLE_IS_OPENED:\r\n      return {\r\n        ...state,\r\n        isOpened: true,\r\n      };\r\n    case TABLE_IS_CLOSED:\r\n      return {\r\n        ...state,\r\n        isOpened: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default standingsReducer;\r\n","import {\r\n  STARTSCREEN_IS_OPENED,\r\n  STARTSCREEN_IS_CLOSED,\r\n} from '../../constants/types';\r\n\r\nconst initialState = {\r\n  isClosed: false,\r\n};\r\n\r\nfunction closeStartScreen(state = initialState, action) {\r\n  switch (action.type) {\r\n    case STARTSCREEN_IS_OPENED:\r\n      return {\r\n        ...state,\r\n        isClosed: false,\r\n      };\r\n    case STARTSCREEN_IS_CLOSED:\r\n      return {\r\n        ...state,\r\n        isClosed: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default closeStartScreen;\r\n","import { ADD_PLAYER_NAME } from '../../constants/types';\r\n\r\nconst initialState = {\r\n  name: '',\r\n};\r\n\r\nfunction playerReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_PLAYER_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.payload.name,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default playerReducer;\r\n","import { INCREASE_PLAYER_NUMBER } from '../../constants/types';\r\n\r\nconst initialState = {\r\n  number: 1,\r\n};\r\n\r\nfunction increasePlayerNumber(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INCREASE_PLAYER_NUMBER:\r\n      return {\r\n        ...state,\r\n        number: action.payload.number + 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default increasePlayerNumber;\r\n","import { combineReducers } from 'redux';\r\nimport cardsArrayReducer from './cardsArrayReducer';\r\nimport flipReducer from './flipReducers';\r\nimport changeScoreReducer from './changeScoreReducer';\r\nimport setTimerReducer from './timerReducer';\r\nimport standingsReducer from './standingsReducer';\r\nimport startScreenReducer from './startScreenReducer';\r\nimport playerReducer from './playerReducer';\r\nimport positionReducer from './positionReducer';\r\n\r\nexport const rootReducers = combineReducers({\r\n  cardsArrayReducer,\r\n  flipReducer,\r\n  changeScoreReducer,\r\n  standingsReducer,\r\n  startScreenReducer,\r\n  setTimerReducer,\r\n  playerReducer,\r\n  positionReducer,\r\n});\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducers } from './reducers/reducer';\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : (f) => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  FLIP_CARD_TO_CLOSED,\r\n  FLIP_CARD_TO_OPENED,\r\n  FLIP_CARD_ADD_TO_CHECK,\r\n  UPDATED_PLAYFIELD,\r\n  INCREASE_SCORE_POINT,\r\n  DECREASE_SCORE_POINT,\r\n  TIMER_IS_ON,\r\n  TIMER_IS_OFF,\r\n  START_TIMER,\r\n  TABLE_IS_OPENED,\r\n  TABLE_IS_CLOSED,\r\n  STARTSCREEN_IS_OPENED,\r\n  STARTSCREEN_IS_CLOSED,\r\n  ADD_PLAYER_NAME,\r\n  INCREASE_PLAYER_NUMBER,\r\n} from '../constants/types';\r\nimport store from '../redux/store';\r\n\r\nexport function flippedToOpened(isVisibleState, cardId) {\r\n  return {\r\n    type: FLIP_CARD_TO_OPENED,\r\n    payload: {\r\n      id: cardId,\r\n      isVisible: isVisibleState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function addCardToCheckState(isVisibleState, color, cardId) {\r\n  return {\r\n    type: FLIP_CARD_ADD_TO_CHECK,\r\n    payload: {\r\n      id: cardId,\r\n      isVisible: isVisibleState,\r\n      color,\r\n    },\r\n  };\r\n}\r\n\r\nexport function flippedToClosed(isVisibleState, cardId) {\r\n  return {\r\n    type: FLIP_CARD_TO_CLOSED,\r\n    payload: {\r\n      id: cardId,\r\n      isVisible: isVisibleState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function flippedToClosedInFewSeconds(isVisibleState, cardId) {\r\n  store.dispatch(flippedToClosed(isVisibleState, cardId));\r\n}\r\n\r\nexport function updatePlayfield(card) {\r\n  return (dispatch) => {\r\n    return setTimeout(\r\n      () =>\r\n        dispatch({\r\n          type: UPDATED_PLAYFIELD,\r\n          payload: {\r\n            card: card,\r\n          },\r\n        }),\r\n      2000\r\n    );\r\n  };\r\n}\r\n\r\nexport function increaseScore(scoreState) {\r\n  return (dispatch) => {\r\n    return setTimeout(() => {\r\n      dispatch({\r\n        type: INCREASE_SCORE_POINT,\r\n        payload: {\r\n          score: scoreState,\r\n        },\r\n      });\r\n    }, 1000);\r\n  };\r\n}\r\n\r\nexport function decreaseScore(scoreState) {\r\n  return (dispatch) => {\r\n    return setTimeout(() => {\r\n      dispatch({\r\n        type: DECREASE_SCORE_POINT,\r\n        payload: {\r\n          score: scoreState,\r\n        },\r\n      });\r\n    }, 1000);\r\n  };\r\n}\r\n\r\nexport function startTimer(timerState) {\r\n  return {\r\n    type: TIMER_IS_ON,\r\n    payload: {\r\n      timerOn: timerState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function stopTimer(timerState) {\r\n  return {\r\n    type: TIMER_IS_OFF,\r\n    payload: {\r\n      timerOn: timerState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function counterTimer(currentTime) {\r\n  return {\r\n    type: START_TIMER,\r\n    payload: {\r\n      time: currentTime,\r\n    },\r\n  };\r\n}\r\n\r\nexport function openTable(tableState) {\r\n  return {\r\n    type: TABLE_IS_OPENED,\r\n    payload: {\r\n      isOpened: tableState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function closeTable(tableState) {\r\n  return {\r\n    type: TABLE_IS_CLOSED,\r\n    payload: {\r\n      isOpened: tableState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function openStartScreen(startScreenState) {\r\n  return {\r\n    type: STARTSCREEN_IS_OPENED,\r\n    payload: {\r\n      isClosed: startScreenState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function closeStartScreen(startScreenState) {\r\n  return {\r\n    type: STARTSCREEN_IS_CLOSED,\r\n    payload: {\r\n      isClosed: startScreenState,\r\n    },\r\n  };\r\n}\r\n\r\nexport function addPlayerName(playerName) {\r\n  return {\r\n    type: ADD_PLAYER_NAME,\r\n    payload: {\r\n      name: playerName,\r\n    },\r\n  };\r\n}\r\n\r\nexport function increasePlayerNumberPosition(playerNumber) {\r\n  return {\r\n    type: INCREASE_PLAYER_NUMBER,\r\n    payload: {\r\n      number: playerNumber,\r\n    },\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  closeStartScreen,\r\n  addPlayerName,\r\n  startTimer,\r\n} from '../../redux/actionCreators';\r\nimport store from '../../redux/store';\r\n\r\nfunction StartScreen({ isClosed }) {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (e.target.firstChild.value !== 0) {\r\n      store.dispatch(addPlayerName(e.target.firstChild.value));\r\n    } else {\r\n      return;\r\n    }\r\n    return (e.target.firstChild.value = '');\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={`startScreen ${isClosed ? 'startScreen_is-Closed' : ''}`}\r\n    >\r\n      <h1 className='startScreen__text'>Welcome to the Memory game!</h1>\r\n      <form className='startScreen__container' onSubmit={handleSubmit}>\r\n        <input\r\n          type='text'\r\n          className='startScreen__playerName'\r\n          placeholder='Enter your name'\r\n        />\r\n        <button\r\n          className='startScreen__play'\r\n          type='submit'\r\n          onClick={() => {\r\n            store.dispatch(closeStartScreen(true)) &&\r\n              store.dispatch(startTimer(true));\r\n          }}\r\n        >\r\n          Enter\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isClosed: state.startScreenReducer.isClosed,\r\n    name: state.playerReducer.name,\r\n    timer: state.setTimerReducer.time,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  closeStartScreen,\r\n  addPlayerName,\r\n  startTimer,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { stopTimer, counterTimer } from '../../redux/actionCreators';\r\nimport store from '../../redux/store';\r\n\r\nfunction Timer({ cardsArray, timer, timerOn }) {\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (timerOn) {\r\n      interval = setInterval(() => {\r\n        store.dispatch(counterTimer(timer));\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [timer, timerOn]);\r\n\r\n  useEffect(() => {\r\n    if (cardsArray.length === 0) {\r\n      store.dispatch(stopTimer(false));\r\n    }\r\n  }, [cardsArray.length]);\r\n  return (\r\n    <>\r\n      <h2 className='header__text header__text_timer'>\r\n        <span>{'0' + Math.floor((timer / 60) % 60)}:</span>\r\n        <span>{('0' + Math.floor(timer % 60)).slice(-2)}</span>\r\n      </h2>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const stateCardsArray = state.cardsArrayReducer.cardsArray;\r\n  const stateTimer = state.setTimerReducer.time;\r\n  const stateTimerOn = state.setTimerReducer.timerOn;\r\n  const stateIsClosed = state.startScreenReducer.isClosed;\r\n  return {\r\n    cardsArray: stateCardsArray,\r\n    timer: stateTimer,\r\n    timerOn: stateTimerOn,\r\n    isClosed: stateIsClosed,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  stopTimer,\r\n  counterTimer,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n","import { connect } from 'react-redux';\r\nimport Timer from '../Timer/Timer';\r\n\r\nfunction Header({ score }) {\r\n  return (\r\n    <div className='header'>\r\n      <h1 className='header__text'>Welcome to the Memory game!</h1>;\r\n      <Timer />\r\n      <h3 className='header__text header__text_score'>\r\n        You have scored {score} points!\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const stateScore = state.changeScoreReducer.score;\r\n  return {\r\n    score: stateScore,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import { connect } from 'react-redux';\r\nimport { flippedToOpened, flippedToClosed } from '../../redux/actionCreators';\r\n\r\nfunction Card({ store, card }) {\r\n  return (\r\n    <div\r\n      className={`card ${card.isVisible ? 'flip' : ''}`}\r\n      onClick={() => {\r\n        card.isVisible === false\r\n          ? store.dispatch(flippedToOpened(true, card.id))\r\n          : store.dispatch(flippedToClosed(false, card.id));\r\n      }}\r\n    >\r\n      <div className='flipper'>\r\n        <div className='frontSide'>Flip me!</div>\r\n        <div className='cover' style={{ background: card.color }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const stateCardArray = state.cardsArrayReducer.cardsArray.map((item) => {\r\n    return item;\r\n  });\r\n  return {\r\n    cardsArrayFromState: stateCardArray,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  flippedToOpened,\r\n  flippedToClosed,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n","import { connect } from 'react-redux';\r\nimport Card from '../Card/Card';\r\n\r\nfunction CardList({ store, cardsArray }) {\r\n  return (\r\n    <div className='cardList'>\r\n      {cardsArray.map((item) => {\r\n        item.isVisible = false;\r\n        return <Card key={item.id} card={item} store={store} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const stateArray = state.cardsArrayReducer.cardsArray;\r\n  return {\r\n    cardsArray: stateArray,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CardList);\r\n","import CardList from '../CardList/CardList';\r\n\r\nfunction Playfield({ store }) {\r\n  return (\r\n    <section className='playfield'>\r\n      <CardList store={store} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Playfield;\r\n","import { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport store from '../../redux/store';\r\nimport {\r\n  openTable,\r\n  closeTable,\r\n  increasePlayerNumberPosition,\r\n} from '../../redux/actionCreators';\r\n\r\nfunction Standings({ cardsArray, isOpened, name, score, timer, number }) {\r\n  useEffect(() => {\r\n    if (cardsArray.length === 0) {\r\n      store.dispatch(openTable(true));\r\n    }\r\n  }, [cardsArray]);\r\n\r\n  return (\r\n    <section\r\n      className={`popup-standings ${\r\n        isOpened ? 'popup-standings_is-opened' : ''\r\n      }`}\r\n    >\r\n      <div className='popup-standings__table'>\r\n        <button\r\n          className='popup-standings__close'\r\n          type='button'\r\n          onClick={() =>\r\n            store.dispatch(closeTable(false)) &&\r\n            store.dispatch(increasePlayerNumberPosition(1))\r\n          }\r\n        ></button>\r\n        <div className='popup-standings__player'>\r\n          <div className='popup-standings__position'>{number}</div>\r\n          <div className='popup-standings__name'>{name}</div>\r\n          <div className='popup-standings__time'>{timer}</div>\r\n          <div className='popup-standings__score'>{score}</div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cardsArray: state.cardsArrayReducer.cardsArray,\r\n    isOpened: state.standingsReducer.isOpened,\r\n    name: state.playerReducer.name,\r\n    score: state.changeScoreReducer.score,\r\n    timer: state.setTimerReducer.time,\r\n    number: state.positionReducer.number,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  openTable,\r\n  closeTable,\r\n  increasePlayerNumberPosition,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Standings);\r\n","import { render } from '@testing-library/react';\nimport StartScreen from '../StartScreen/StartScreen';\nimport Header from '../Header/Header';\nimport Playfield from '../Playfield/Playfield';\nimport Standings from '../Standings/Standings';\n\nfunction App({ store }) {\n  store.subscribe(render);\n  const unsubscribe = store.subscribe(() =>\n    console.log('State after dispatch: ', store.getState())\n  );\n\n  unsubscribe();\n  return (\n    <div className='App'>\n      <StartScreen />\n      <Header />\n      <Playfield store={store} />\n      <Standings />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App store={store} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}